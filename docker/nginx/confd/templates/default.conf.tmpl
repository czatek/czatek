{{ define "APP" }}
root /usr/src/app;
client_max_body_size 75M;

add_header X-Frame-Options DENY;
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header Referrer-Policy strict-origin-when-cross-origin;
add_header Content-Security-Policy "script-src 'self' https://apis.google.com https://ssl.gstatic.com; img-src 'self'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; frame-src https://accounts.google.com; connect-src *; manifest-src 'self'; default-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';";

location = /service-worker.js {
  expires -1;
}

location ~* \.(?:html|xml|json)$ {
  expires -1;
}

location ~* \.(?:css|js|png|svg|ico)$ {
  expires 1y;
  access_log off;
  add_header Cache-Control "public";
}

location ~* \.map$ {
  access_log off;
  log_not_found off;
}

location /api/chat {
    proxy_pass http://backend:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
}

location = / {
  rewrite ^ /index.html break;
}
{{ end }}

gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_proxied expired no-cache no-store private auth;
gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml;
gzip_disable "MSIE [1-6]\.";

server_tokens off;

server {
  listen 80 default_server;
  listen [::]:80 default_server;
  charset     utf-8;

  location /.well-known {
    alias /usr/src/app/.well-known;
  }

  {{ if eq (getenv "FRONTEND_SSL_ENABLE") "true" }}
  location / {
    return 301 https://$host:{{ getenv "FRONTEND_SSL_PORT" }}$request_uri;
  }
  {{ else }}
  {{ template "APP" }}
  {{ end }}
}

{{ if eq (getenv "FRONTEND_SSL_ENABLE") "true" }}
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  charset     utf-8;

  {{ template "APP" }}

  ssl_certificate /etc/certs/fullchain.pem;
  ssl_certificate_key /etc/certs/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  ssl_dhparam /etc/certs/dhparam.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  add_header Strict-Transport-Security max-age=15768000;
  {{ if eq (getenv "FRONTEND_PUBLIC_KEY_PINS_ENABLE") "true" }}
  add_header Public-Key-Pins {{ getenv "FRONTEND_PUBLIC_KEY_PINS" }};
  {{ end }}

  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/certs/chain.pem;

  resolver 8.8.8.8 8.8.4.4;
}
{{ end }}
